//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication14UltimatePlugFront.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserClass", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class UserClass : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuburbField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Confirm {
            get {
                return this.ConfirmField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmField, value) != true)) {
                    this.ConfirmField = value;
                    this.RaisePropertyChanged("Confirm");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suburb {
            get {
                return this.SuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SuburbField, value) != true)) {
                    this.SuburbField = value;
                    this.RaisePropertyChanged("Suburb");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Company_Or_Owner_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Hirer_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Prod_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuburbField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company_Or_Owner_Name {
            get {
                return this.Company_Or_Owner_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Company_Or_Owner_NameField, value) != true)) {
                    this.Company_Or_Owner_NameField = value;
                    this.RaisePropertyChanged("Company_Or_Owner_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hirer_ID {
            get {
                return this.Hirer_IDField;
            }
            set {
                if ((this.Hirer_IDField.Equals(value) != true)) {
                    this.Hirer_IDField = value;
                    this.RaisePropertyChanged("Hirer_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Prod_Type {
            get {
                return this.Prod_TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.Prod_TypeField, value) != true)) {
                    this.Prod_TypeField = value;
                    this.RaisePropertyChanged("Prod_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suburb {
            get {
                return this.SuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SuburbField, value) != true)) {
                    this.SuburbField = value;
                    this.RaisePropertyChanged("Suburb");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Hire", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Hire : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> Hire_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HirerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Hire_Date {
            get {
                return this.Hire_DateField;
            }
            set {
                if ((this.Hire_DateField.Equals(value) != true)) {
                    this.Hire_DateField = value;
                    this.RaisePropertyChanged("Hire_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HirerID {
            get {
                return this.HirerIDField;
            }
            set {
                if ((this.HirerIDField.Equals(value) != true)) {
                    this.HirerIDField = value;
                    this.RaisePropertyChanged("HirerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProductName {
            get {
                return this.ProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductNameField, value) != true)) {
                    this.ProductNameField = value;
                    this.RaisePropertyChanged("ProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Driver", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class Driver : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CarNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberPlateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuburbField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarImage {
            get {
                return this.CarImageField;
            }
            set {
                if ((object.ReferenceEquals(this.CarImageField, value) != true)) {
                    this.CarImageField = value;
                    this.RaisePropertyChanged("CarImage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CarName {
            get {
                return this.CarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CarNameField, value) != true)) {
                    this.CarNameField = value;
                    this.RaisePropertyChanged("CarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmPassword {
            get {
                return this.ConfirmPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmPasswordField, value) != true)) {
                    this.ConfirmPasswordField = value;
                    this.RaisePropertyChanged("ConfirmPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseNumber {
            get {
                return this.LicenseNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseNumberField, value) != true)) {
                    this.LicenseNumberField = value;
                    this.RaisePropertyChanged("LicenseNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NumberPlate {
            get {
                return this.NumberPlateField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberPlateField, value) != true)) {
                    this.NumberPlateField = value;
                    this.RaisePropertyChanged("NumberPlate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suburb {
            get {
                return this.SuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SuburbField, value) != true)) {
                    this.SuburbField = value;
                    this.RaisePropertyChanged("Suburb");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConfirmPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SuburbField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfirmPassword {
            get {
                return this.ConfirmPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfirmPasswordField, value) != true)) {
                    this.ConfirmPasswordField = value;
                    this.RaisePropertyChanged("ConfirmPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Suburb {
            get {
                return this.SuburbField;
            }
            set {
                if ((object.ReferenceEquals(this.SuburbField, value) != true)) {
                    this.SuburbField = value;
                    this.RaisePropertyChanged("Suburb");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/isReg", ReplyAction="http://tempuri.org/IService/isRegResponse")]
        bool isReg(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/isReg", ReplyAction="http://tempuri.org/IService/isRegResponse")]
        System.Threading.Tasks.Task<bool> isRegAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/register", ReplyAction="http://tempuri.org/IService/registerResponse")]
        int register(WebApplication14UltimatePlugFront.ServiceReference1.UserClass u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/register", ReplyAction="http://tempuri.org/IService/registerResponse")]
        System.Threading.Tasks.Task<int> registerAsync(WebApplication14UltimatePlugFront.ServiceReference1.UserClass u);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/logintype", ReplyAction="http://tempuri.org/IService/logintypeResponse")]
        int logintype(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/logintype", ReplyAction="http://tempuri.org/IService/logintypeResponse")]
        System.Threading.Tasks.Task<int> logintypeAsync(string email, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getHirerID", ReplyAction="http://tempuri.org/IService/getHirerIDResponse")]
        int getHirerID(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getHirerID", ReplyAction="http://tempuri.org/IService/getHirerIDResponse")]
        System.Threading.Tasks.Task<int> getHirerIDAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getHirerMail", ReplyAction="http://tempuri.org/IService/getHirerMailResponse")]
        string getHirerMail(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getHirerMail", ReplyAction="http://tempuri.org/IService/getHirerMailResponse")]
        System.Threading.Tasks.Task<string> getHirerMailAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/addProduct", ReplyAction="http://tempuri.org/IService/addProductResponse")]
        int addProduct(int hireID, string prodType, string description, decimal price, string image, string prodName, string businessName, string suburb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/addProduct", ReplyAction="http://tempuri.org/IService/addProductResponse")]
        System.Threading.Tasks.Task<int> addProductAsync(int hireID, string prodType, string description, decimal price, string image, string prodName, string businessName, string suburb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getbyType", ReplyAction="http://tempuri.org/IService/getbyTypeResponse")]
        WebApplication14UltimatePlugFront.ServiceReference1.Product[] getbyType(string prodType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getbyType", ReplyAction="http://tempuri.org/IService/getbyTypeResponse")]
        System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Product[]> getbyTypeAsync(string prodType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getbySuburb", ReplyAction="http://tempuri.org/IService/getbySuburbResponse")]
        WebApplication14UltimatePlugFront.ServiceReference1.Product[] getbySuburb(string type, string Suburb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getbySuburb", ReplyAction="http://tempuri.org/IService/getbySuburbResponse")]
        System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Product[]> getbySuburbAsync(string type, string Suburb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getSingle", ReplyAction="http://tempuri.org/IService/getSingleResponse")]
        WebApplication14UltimatePlugFront.ServiceReference1.Product getSingle(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getSingle", ReplyAction="http://tempuri.org/IService/getSingleResponse")]
        System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Product> getSingleAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/hire", ReplyAction="http://tempuri.org/IService/hireResponse")]
        int hire(string ProductName, System.DateTime date, string time, string username, int hirerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/hire", ReplyAction="http://tempuri.org/IService/hireResponse")]
        System.Threading.Tasks.Task<int> hireAsync(string ProductName, System.DateTime date, string time, string username, int hirerID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getEvent", ReplyAction="http://tempuri.org/IService/getEventResponse")]
        WebApplication14UltimatePlugFront.ServiceReference1.Hire[] getEvent(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getEvent", ReplyAction="http://tempuri.org/IService/getEventResponse")]
        System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Hire[]> getEventAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/confirmHire", ReplyAction="http://tempuri.org/IService/confirmHireResponse")]
        int confirmHire(string customerName, string customerMail, string productNAme, System.DateTime date, string time, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/confirmHire", ReplyAction="http://tempuri.org/IService/confirmHireResponse")]
        System.Threading.Tasks.Task<int> confirmHireAsync(string customerName, string customerMail, string productNAme, System.DateTime date, string time, string status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getUserMail", ReplyAction="http://tempuri.org/IService/getUserMailResponse")]
        string getUserMail(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getUserMail", ReplyAction="http://tempuri.org/IService/getUserMailResponse")]
        System.Threading.Tasks.Task<string> getUserMailAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getProducts", ReplyAction="http://tempuri.org/IService/getProductsResponse")]
        WebApplication14UltimatePlugFront.ServiceReference1.Product[] getProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getProducts", ReplyAction="http://tempuri.org/IService/getProductsResponse")]
        System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Product[]> getProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getUserProducts", ReplyAction="http://tempuri.org/IService/getUserProductsResponse")]
        WebApplication14UltimatePlugFront.ServiceReference1.Hire[] getUserProducts(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getUserProducts", ReplyAction="http://tempuri.org/IService/getUserProductsResponse")]
        System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Hire[]> getUserProductsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getHirerSuburb", ReplyAction="http://tempuri.org/IService/getHirerSuburbResponse")]
        string getHirerSuburb(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getHirerSuburb", ReplyAction="http://tempuri.org/IService/getHirerSuburbResponse")]
        System.Threading.Tasks.Task<string> getHirerSuburbAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getUserSuburb", ReplyAction="http://tempuri.org/IService/getUserSuburbResponse")]
        string getUserSuburb(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getUserSuburb", ReplyAction="http://tempuri.org/IService/getUserSuburbResponse")]
        System.Threading.Tasks.Task<string> getUserSuburbAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/searchProduct", ReplyAction="http://tempuri.org/IService/searchProductResponse")]
        WebApplication14UltimatePlugFront.ServiceReference1.Product[] searchProduct(string category, string prodName, string suburb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/searchProduct", ReplyAction="http://tempuri.org/IService/searchProductResponse")]
        System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Product[]> searchProductAsync(string category, string prodName, string suburb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/searchAllP", ReplyAction="http://tempuri.org/IService/searchAllPResponse")]
        WebApplication14UltimatePlugFront.ServiceReference1.Product[] searchAllP(string category, string prodName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/searchAllP", ReplyAction="http://tempuri.org/IService/searchAllPResponse")]
        System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Product[]> searchAllPAsync(string category, string prodName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/addDriver", ReplyAction="http://tempuri.org/IService/addDriverResponse")]
        int addDriver(string username, string licenceNumber, string NumberPlate, string carName, string carImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/addDriver", ReplyAction="http://tempuri.org/IService/addDriverResponse")]
        System.Threading.Tasks.Task<int> addDriverAsync(string username, string licenceNumber, string NumberPlate, string carName, string carImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getDriverBySuburb", ReplyAction="http://tempuri.org/IService/getDriverBySuburbResponse")]
        WebApplication14UltimatePlugFront.ServiceReference1.Driver[] getDriverBySuburb(string suburb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getDriverBySuburb", ReplyAction="http://tempuri.org/IService/getDriverBySuburbResponse")]
        System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Driver[]> getDriverBySuburbAsync(string suburb);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/isDriverReg", ReplyAction="http://tempuri.org/IService/isDriverRegResponse")]
        bool isDriverReg(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/isDriverReg", ReplyAction="http://tempuri.org/IService/isDriverRegResponse")]
        System.Threading.Tasks.Task<bool> isDriverRegAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getUser", ReplyAction="http://tempuri.org/IService/getUserResponse")]
        WebApplication14UltimatePlugFront.ServiceReference1.User getUser(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/getUser", ReplyAction="http://tempuri.org/IService/getUserResponse")]
        System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.User> getUserAsync(string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : WebApplication14UltimatePlugFront.ServiceReference1.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<WebApplication14UltimatePlugFront.ServiceReference1.IService>, WebApplication14UltimatePlugFront.ServiceReference1.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool isReg(string email, string password) {
            return base.Channel.isReg(email, password);
        }
        
        public System.Threading.Tasks.Task<bool> isRegAsync(string email, string password) {
            return base.Channel.isRegAsync(email, password);
        }
        
        public int register(WebApplication14UltimatePlugFront.ServiceReference1.UserClass u) {
            return base.Channel.register(u);
        }
        
        public System.Threading.Tasks.Task<int> registerAsync(WebApplication14UltimatePlugFront.ServiceReference1.UserClass u) {
            return base.Channel.registerAsync(u);
        }
        
        public int logintype(string email, string password) {
            return base.Channel.logintype(email, password);
        }
        
        public System.Threading.Tasks.Task<int> logintypeAsync(string email, string password) {
            return base.Channel.logintypeAsync(email, password);
        }
        
        public int getHirerID(string email) {
            return base.Channel.getHirerID(email);
        }
        
        public System.Threading.Tasks.Task<int> getHirerIDAsync(string email) {
            return base.Channel.getHirerIDAsync(email);
        }
        
        public string getHirerMail(int ID) {
            return base.Channel.getHirerMail(ID);
        }
        
        public System.Threading.Tasks.Task<string> getHirerMailAsync(int ID) {
            return base.Channel.getHirerMailAsync(ID);
        }
        
        public int addProduct(int hireID, string prodType, string description, decimal price, string image, string prodName, string businessName, string suburb) {
            return base.Channel.addProduct(hireID, prodType, description, price, image, prodName, businessName, suburb);
        }
        
        public System.Threading.Tasks.Task<int> addProductAsync(int hireID, string prodType, string description, decimal price, string image, string prodName, string businessName, string suburb) {
            return base.Channel.addProductAsync(hireID, prodType, description, price, image, prodName, businessName, suburb);
        }
        
        public WebApplication14UltimatePlugFront.ServiceReference1.Product[] getbyType(string prodType) {
            return base.Channel.getbyType(prodType);
        }
        
        public System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Product[]> getbyTypeAsync(string prodType) {
            return base.Channel.getbyTypeAsync(prodType);
        }
        
        public WebApplication14UltimatePlugFront.ServiceReference1.Product[] getbySuburb(string type, string Suburb) {
            return base.Channel.getbySuburb(type, Suburb);
        }
        
        public System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Product[]> getbySuburbAsync(string type, string Suburb) {
            return base.Channel.getbySuburbAsync(type, Suburb);
        }
        
        public WebApplication14UltimatePlugFront.ServiceReference1.Product getSingle(int id) {
            return base.Channel.getSingle(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Product> getSingleAsync(int id) {
            return base.Channel.getSingleAsync(id);
        }
        
        public int hire(string ProductName, System.DateTime date, string time, string username, int hirerID) {
            return base.Channel.hire(ProductName, date, time, username, hirerID);
        }
        
        public System.Threading.Tasks.Task<int> hireAsync(string ProductName, System.DateTime date, string time, string username, int hirerID) {
            return base.Channel.hireAsync(ProductName, date, time, username, hirerID);
        }
        
        public WebApplication14UltimatePlugFront.ServiceReference1.Hire[] getEvent(int id) {
            return base.Channel.getEvent(id);
        }
        
        public System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Hire[]> getEventAsync(int id) {
            return base.Channel.getEventAsync(id);
        }
        
        public int confirmHire(string customerName, string customerMail, string productNAme, System.DateTime date, string time, string status) {
            return base.Channel.confirmHire(customerName, customerMail, productNAme, date, time, status);
        }
        
        public System.Threading.Tasks.Task<int> confirmHireAsync(string customerName, string customerMail, string productNAme, System.DateTime date, string time, string status) {
            return base.Channel.confirmHireAsync(customerName, customerMail, productNAme, date, time, status);
        }
        
        public string getUserMail(int id) {
            return base.Channel.getUserMail(id);
        }
        
        public System.Threading.Tasks.Task<string> getUserMailAsync(int id) {
            return base.Channel.getUserMailAsync(id);
        }
        
        public WebApplication14UltimatePlugFront.ServiceReference1.Product[] getProducts() {
            return base.Channel.getProducts();
        }
        
        public System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Product[]> getProductsAsync() {
            return base.Channel.getProductsAsync();
        }
        
        public WebApplication14UltimatePlugFront.ServiceReference1.Hire[] getUserProducts(string username) {
            return base.Channel.getUserProducts(username);
        }
        
        public System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Hire[]> getUserProductsAsync(string username) {
            return base.Channel.getUserProductsAsync(username);
        }
        
        public string getHirerSuburb(int id) {
            return base.Channel.getHirerSuburb(id);
        }
        
        public System.Threading.Tasks.Task<string> getHirerSuburbAsync(int id) {
            return base.Channel.getHirerSuburbAsync(id);
        }
        
        public string getUserSuburb(string username) {
            return base.Channel.getUserSuburb(username);
        }
        
        public System.Threading.Tasks.Task<string> getUserSuburbAsync(string username) {
            return base.Channel.getUserSuburbAsync(username);
        }
        
        public WebApplication14UltimatePlugFront.ServiceReference1.Product[] searchProduct(string category, string prodName, string suburb) {
            return base.Channel.searchProduct(category, prodName, suburb);
        }
        
        public System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Product[]> searchProductAsync(string category, string prodName, string suburb) {
            return base.Channel.searchProductAsync(category, prodName, suburb);
        }
        
        public WebApplication14UltimatePlugFront.ServiceReference1.Product[] searchAllP(string category, string prodName) {
            return base.Channel.searchAllP(category, prodName);
        }
        
        public System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Product[]> searchAllPAsync(string category, string prodName) {
            return base.Channel.searchAllPAsync(category, prodName);
        }
        
        public int addDriver(string username, string licenceNumber, string NumberPlate, string carName, string carImage) {
            return base.Channel.addDriver(username, licenceNumber, NumberPlate, carName, carImage);
        }
        
        public System.Threading.Tasks.Task<int> addDriverAsync(string username, string licenceNumber, string NumberPlate, string carName, string carImage) {
            return base.Channel.addDriverAsync(username, licenceNumber, NumberPlate, carName, carImage);
        }
        
        public WebApplication14UltimatePlugFront.ServiceReference1.Driver[] getDriverBySuburb(string suburb) {
            return base.Channel.getDriverBySuburb(suburb);
        }
        
        public System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.Driver[]> getDriverBySuburbAsync(string suburb) {
            return base.Channel.getDriverBySuburbAsync(suburb);
        }
        
        public bool isDriverReg(string username) {
            return base.Channel.isDriverReg(username);
        }
        
        public System.Threading.Tasks.Task<bool> isDriverRegAsync(string username) {
            return base.Channel.isDriverRegAsync(username);
        }
        
        public WebApplication14UltimatePlugFront.ServiceReference1.User getUser(string username) {
            return base.Channel.getUser(username);
        }
        
        public System.Threading.Tasks.Task<WebApplication14UltimatePlugFront.ServiceReference1.User> getUserAsync(string username) {
            return base.Channel.getUserAsync(username);
        }
    }
}
